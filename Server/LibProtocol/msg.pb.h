// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace msg {
class AccountInfo;
class AccountInfoDefaultTypeInternal;
extern AccountInfoDefaultTypeInternal _AccountInfo_default_instance_;
class AccountQuery;
class AccountQueryDefaultTypeInternal;
extern AccountQueryDefaultTypeInternal _AccountQuery_default_instance_;
class AccountUpdate;
class AccountUpdateDefaultTypeInternal;
extern AccountUpdateDefaultTypeInternal _AccountUpdate_default_instance_;
}  // namespace msg

namespace msg {

namespace protobuf_msg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_msg_2eproto

// ===================================================================

class AccountInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.AccountInfo) */ {
 public:
  AccountInfo();
  virtual ~AccountInfo();

  AccountInfo(const AccountInfo& from);

  inline AccountInfo& operator=(const AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountInfo& default_instance();

  static inline const AccountInfo* internal_default_instance() {
    return reinterpret_cast<const AccountInfo*>(
               &_AccountInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AccountInfo* other);

  // implements Message ----------------------------------------------

  inline AccountInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountInfo& from);
  void MergeFrom(const AccountInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg.AccountInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();
  void set_has_create_time();
  void clear_has_create_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 create_time_;
  friend struct protobuf_msg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.AccountQuery) */ {
 public:
  AccountQuery();
  virtual ~AccountQuery();

  AccountQuery(const AccountQuery& from);

  inline AccountQuery& operator=(const AccountQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountQuery& default_instance();

  static inline const AccountQuery* internal_default_instance() {
    return reinterpret_cast<const AccountQuery*>(
               &_AccountQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AccountQuery* other);

  // implements Message ----------------------------------------------

  inline AccountQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountQuery& from);
  void MergeFrom(const AccountQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.AccountInfo account_list = 1;
  bool has_account_list() const;
  void clear_account_list();
  static const int kAccountListFieldNumber = 1;
  const ::msg::AccountInfo& account_list() const;
  ::msg::AccountInfo* mutable_account_list();
  ::msg::AccountInfo* release_account_list();
  void set_allocated_account_list(::msg::AccountInfo* account_list);

  // @@protoc_insertion_point(class_scope:msg.AccountQuery)
 private:
  void set_has_account_list();
  void clear_has_account_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::msg::AccountInfo* account_list_;
  friend struct protobuf_msg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.AccountUpdate) */ {
 public:
  AccountUpdate();
  virtual ~AccountUpdate();

  AccountUpdate(const AccountUpdate& from);

  inline AccountUpdate& operator=(const AccountUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpdate& default_instance();

  static inline const AccountUpdate* internal_default_instance() {
    return reinterpret_cast<const AccountUpdate*>(
               &_AccountUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AccountUpdate* other);

  // implements Message ----------------------------------------------

  inline AccountUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpdate& from);
  void MergeFrom(const AccountUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.AccountInfo account_list = 1;
  bool has_account_list() const;
  void clear_account_list();
  static const int kAccountListFieldNumber = 1;
  const ::msg::AccountInfo& account_list() const;
  ::msg::AccountInfo* mutable_account_list();
  ::msg::AccountInfo* release_account_list();
  void set_allocated_account_list(::msg::AccountInfo* account_list);

  // @@protoc_insertion_point(class_scope:msg.AccountUpdate)
 private:
  void set_has_account_list();
  void clear_has_account_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::msg::AccountInfo* account_list_;
  friend struct protobuf_msg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountInfo

// optional uint32 id = 1;
inline bool AccountInfo::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountInfo::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AccountInfo::id() const {
  // @@protoc_insertion_point(field_get:msg.AccountInfo.id)
  return id_;
}
inline void AccountInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.AccountInfo.id)
}

// optional string username = 2;
inline bool AccountInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& AccountInfo::username() const {
  // @@protoc_insertion_point(field_get:msg.AccountInfo.username)
  return username_.GetNoArena();
}
inline void AccountInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AccountInfo.username)
}
#if LANG_CXX11
inline void AccountInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.AccountInfo.username)
}
#endif
inline void AccountInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AccountInfo.username)
}
inline void AccountInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AccountInfo.username)
}
inline ::std::string* AccountInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:msg.AccountInfo.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountInfo::release_username() {
  // @@protoc_insertion_point(field_release:msg.AccountInfo.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:msg.AccountInfo.username)
}

// optional string password = 3;
inline bool AccountInfo::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountInfo::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountInfo::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountInfo::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& AccountInfo::password() const {
  // @@protoc_insertion_point(field_get:msg.AccountInfo.password)
  return password_.GetNoArena();
}
inline void AccountInfo::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AccountInfo.password)
}
#if LANG_CXX11
inline void AccountInfo::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.AccountInfo.password)
}
#endif
inline void AccountInfo::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AccountInfo.password)
}
inline void AccountInfo::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AccountInfo.password)
}
inline ::std::string* AccountInfo::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:msg.AccountInfo.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountInfo::release_password() {
  // @@protoc_insertion_point(field_release:msg.AccountInfo.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountInfo::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:msg.AccountInfo.password)
}

// optional uint32 create_time = 4;
inline bool AccountInfo::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccountInfo::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccountInfo::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccountInfo::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 AccountInfo::create_time() const {
  // @@protoc_insertion_point(field_get:msg.AccountInfo.create_time)
  return create_time_;
}
inline void AccountInfo::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg.AccountInfo.create_time)
}

// -------------------------------------------------------------------

// AccountQuery

// optional .msg.AccountInfo account_list = 1;
inline bool AccountQuery::has_account_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountQuery::set_has_account_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountQuery::clear_has_account_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountQuery::clear_account_list() {
  if (account_list_ != NULL) account_list_->::msg::AccountInfo::Clear();
  clear_has_account_list();
}
inline const ::msg::AccountInfo& AccountQuery::account_list() const {
  // @@protoc_insertion_point(field_get:msg.AccountQuery.account_list)
  return account_list_ != NULL ? *account_list_
                         : *::msg::AccountInfo::internal_default_instance();
}
inline ::msg::AccountInfo* AccountQuery::mutable_account_list() {
  set_has_account_list();
  if (account_list_ == NULL) {
    account_list_ = new ::msg::AccountInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg.AccountQuery.account_list)
  return account_list_;
}
inline ::msg::AccountInfo* AccountQuery::release_account_list() {
  // @@protoc_insertion_point(field_release:msg.AccountQuery.account_list)
  clear_has_account_list();
  ::msg::AccountInfo* temp = account_list_;
  account_list_ = NULL;
  return temp;
}
inline void AccountQuery::set_allocated_account_list(::msg::AccountInfo* account_list) {
  delete account_list_;
  account_list_ = account_list;
  if (account_list) {
    set_has_account_list();
  } else {
    clear_has_account_list();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.AccountQuery.account_list)
}

// -------------------------------------------------------------------

// AccountUpdate

// optional .msg.AccountInfo account_list = 1;
inline bool AccountUpdate::has_account_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpdate::set_has_account_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpdate::clear_has_account_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpdate::clear_account_list() {
  if (account_list_ != NULL) account_list_->::msg::AccountInfo::Clear();
  clear_has_account_list();
}
inline const ::msg::AccountInfo& AccountUpdate::account_list() const {
  // @@protoc_insertion_point(field_get:msg.AccountUpdate.account_list)
  return account_list_ != NULL ? *account_list_
                         : *::msg::AccountInfo::internal_default_instance();
}
inline ::msg::AccountInfo* AccountUpdate::mutable_account_list() {
  set_has_account_list();
  if (account_list_ == NULL) {
    account_list_ = new ::msg::AccountInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg.AccountUpdate.account_list)
  return account_list_;
}
inline ::msg::AccountInfo* AccountUpdate::release_account_list() {
  // @@protoc_insertion_point(field_release:msg.AccountUpdate.account_list)
  clear_has_account_list();
  ::msg::AccountInfo* temp = account_list_;
  account_list_ = NULL;
  return temp;
}
inline void AccountUpdate::set_allocated_account_list(::msg::AccountInfo* account_list) {
  delete account_list_;
  account_list_ = account_list;
  if (account_list) {
    set_has_account_list();
  } else {
    clear_has_account_list();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.AccountUpdate.account_list)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
